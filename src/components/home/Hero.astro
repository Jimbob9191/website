---
---

<section class="hero">
  <div class="container">
    <div class="hero-content">
      <h1 class="animate-slide-up">
        Hey, I'm <span class="animated-text">James.</span>
      </h1>
      <p class="hero-description animate-slide-up" style="animation-delay: 0.1s;">
        I craft digital experiences that blend aesthetics with functionality, 
        creating products that users love and businesses value.
      </p>
      <div class="hero-buttons animate-slide-up" style="animation-delay: 0.2s;">
        <a href="/work" class="btn">View My Work</a>
        <a href="/contact" class="btn-secondary">Get in Touch</a>
      </div>
    </div>
  </div>
</section>

<style>
  .hero {
    padding: var(--space-xxl) 0;
    position: relative;
    overflow: hidden;
  }
  
  .hero::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -30%;
    width: 80%;
    height: 150%;
    background: radial-gradient(circle, rgba(0, 113, 227, 0.05) 0%, rgba(255, 255, 255, 0) 70%);
    z-index: -1;
  }
  
  .hero-content {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }
  
  .hero h1 {
    margin-bottom: var(--space-md);
    line-height: 1.1;
  }
  
  .animated-text {
    display: inline-block;
    min-width: 200px;
    text-align: left;
    position: relative;
  }
  
  .hero-description {
    font-size: clamp(1.125rem, 2vw, 1.25rem);
    color: var(--color-medium-gray);
    margin-bottom: var(--space-lg);
    max-width: 650px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .hero-buttons {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    align-items: center;
    justify-content: center;
  }
  
  .btn-secondary {
    display: inline-block;
    background: transparent;
    color: var(--color-accent);
    border: 1px solid var(--color-accent);
    padding: var(--space-sm) var(--space-md);
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all var(--transition-fast);
    text-align: center;
  }
  
  .btn-secondary:hover {
    background: rgba(0, 113, 227, 0.05);
    transform: translateY(-2px);
  }
  
  @media (min-width: 768px) {
    .hero {
      padding: var(--space-xxl) 0 calc(var(--space-xxl) * 1.5);
    }
    
    .hero-buttons {
      flex-direction: row;
      justify-content: center;
    }
  }
</style>

<script>
  const words = ['James.', 'a designer.', 'a strategist.', 'a problem-solver.', 'a builder.', 'an explorer.'];
  let currentIndex = 0;
  const animatedText = document.querySelector('.animated-text');

  if (animatedText) {
    setTimeout(() => {
      async function typeText(text) {
        let currentText = '';
        for (const char of text) {
          currentText += char;
          animatedText.textContent = currentText;
          await new Promise(resolve => setTimeout(resolve, 100));
        }
      }

      async function deleteText() {
        let text = animatedText.textContent;
        while (text.length > 0) {
          text = text.slice(0, -1);
          animatedText.textContent = text;
          await new Promise(resolve => setTimeout(resolve, 50));
        }
      }

      async function animateText() {
        while (true) {
          await typeText(words[currentIndex]);
          await new Promise(resolve => setTimeout(resolve, 2000));
          await deleteText();
          currentIndex = (currentIndex + 1) % words.length;
        }
      }

      animateText();
    }, 5000);
  }
</script>